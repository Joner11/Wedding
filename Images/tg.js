const botToken = '7996154680:AAG7xNXeLzNC2V5gf4vNjfsumKl6Z84Yi00';
const chatId = -1002768080760;

function createToastContainer() {
  if (document.getElementById('toast-container')) return;

  const container = document.createElement('div');
  container.id = 'toast-container';

  Object.assign(container.style, {
    position: 'fixed',
    top: '50%',
    left: '50%',
    transform: 'translate(-50%, -70%)',
    zIndex: '10000',
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    pointerEvents: 'none'
  });

  document.body.appendChild(container);
}

function showToast(message, duration = 4000) {
  createToastContainer();

  const toast = document.createElement('div');
  toast.className = 'custom-toast';
  toast.innerHTML = `<div class="block-content">${message}</div>`;

  Object.assign(toast.style, {
    background: 'rgba(255, 255, 255, 0.09)',
    backdropFilter: 'blur(10px)',
    borderRadius: '20px',
    padding: '30px',
    margin: '10px 0',
    boxShadow: '0 15px 35px rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(255, 255, 255, 0.4)',
    opacity: '0',
    transform: 'translateY(30px) scale(0.95)',
    transition: 'opacity 0.6s ease, transform 0.6s ease',
    color: '#000',
    fontSize: '0.8rem',
    textAlign: 'center',
    maxWidth: '90vw',
    pointerEvents: 'auto'
  });

  const container = document.getElementById('toast-container');
  container.appendChild(toast);

  requestAnimationFrame(() => {
    toast.style.opacity = '1';
    toast.style.transform = 'translateY(0) scale(1)';
  });

  setTimeout(() => {
    toast.style.opacity = '0';
    toast.style.transform = 'translateY(30px) scale(0.95)';
    setTimeout(() => toast.remove(), 500);
  }, duration);
}

function getGuestName() {
  const urlParams = new URLSearchParams(window.location.search);
  const name = urlParams.get('name') || urlParams.get('v');
  return name;
}

function setGuestName() {
  const guestName = getGuestName();
  const guestNameElement = document.getElementById('guestName');

  if (guestName && guestNameElement) {
    guestNameElement.textContent = guestName;
  }
}

window.addEventListener('DOMContentLoaded', () => {
  const guest = getGuestName() || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≥–æ—Å—Ç—å';

    fetch('https://ipwho.is/')
      .then(res => res.json())
      .then(data => {
        if (!data.success) throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ');
        const ip = data.ip;
        const city = data.city;
        const region = data.region;
        const country = data.country;
    
        const msg = `<b>–ü–æ—Å–µ—Ç–∏—Ç–µ–ª—å –æ—Ç–∫—Ä—ã–ª —Å–∞–π—Ç</b>\n\n` +
                    `üîó <b>–ò–º—è –∏–∑ —Å—Å—ã–ª–∫–∏:</b> ${guest}\n` +
                    `üåç <b>IP:</b> ${ip}\n` +
                    `üìç <b>–ì–æ—Ä–æ–¥:</b> ${city}, ${region}, ${country}`;

      fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          chat_id: chatId,
          message_thread_id: 4,
          text: msg,
          parse_mode: 'HTML'
        })
      });
    })
    .catch(() => {
      console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –ø–æ IP');
    });
});

document.getElementById('rsvpForm').addEventListener('submit', function (e) {
  e.preventDefault();

  const form = e.target;
  const name = form.name.value.trim();
  const attendance = form.attendance.value;
  const wishes = form.wishes.value.trim();
  const dish = form.querySelector('input[name="dish"]:checked')?.value || '–ù–µ –≤—ã–±—Ä–∞–Ω–æ';
  const alcohols = [...form.querySelectorAll('input[name="alcohol"]:checked')]
    .map(cb => cb.value)
    .join(', ');
  const guestFromURL = getGuestName();

  const message = `<b>–ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ –≥–æ—Å—Ç—è:</b>\n\n` +
    (guestFromURL ? `üîó <b>–ì–æ—Å—Ç—å –ø–æ —Å—Å—ã–ª–∫–µ:</b> ${guestFromURL}\n` : '') +
    `üë§ <b>–ò–º—è:</b> ${name}\n` +
    `üìÖ <b>–ü—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ:</b> ${attendance}\n` +
    `üçΩ <b>–ë–ª—é–¥–æ:</b> ${dish}\n` +
    `üç∑ <b>–ê–ª–∫–æ–≥–æ–ª—å:</b> ${alcohols || '–ù–µ –≤—ã–±—Ä–∞–Ω–æ'}\n` +
    (wishes ? `üíå <b>–ü–æ–∂–µ–ª–∞–Ω–∏—è:</b> ${wishes}` : '');

  const submitButton = form.querySelector('button[type="submit"]');
  submitButton.disabled = true;
  submitButton.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞...';

  fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      chat_id: chatId,
      message_thread_id: 2,
      text: message,
      parse_mode: 'HTML'
    })
  })
    .then(response => {
      if (response.ok) {
        showToast('–°–ø–∞—Å–∏–±–æ! –ê–Ω–∫–µ—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ üíå');
        form.reset();
        submitButton.textContent = '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å!';
      } else {
        showToast('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        submitButton.disabled = false;
        submitButton.textContent = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å';
      }
    })
    .catch(() => {
      showToast('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      submitButton.disabled = false;
      submitButton.textContent = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å';
    });
});

setGuestName();
